[tool.poetry]
name = "ibis-substrait"
version = "3.1.0"
packages = [{ include = "ibis_substrait" }]
homepage = "https://github.com/ibis-project/ibis-substrait"
repository = "https://github.com/ibis-project/ibis-substrait"
description = "Subtrait compiler for ibis"
authors = ["Ibis Contributors"]
maintainers = ["Ibis Contributors"]
license = "Apache-2.0"
readme = "README.md"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering",
]

[tool.poetry.dependencies]
python = ">=3.9,<4"
ibis-framework = ">=4"
packaging = ">=21.3"
pyyaml = ">=5"
substrait = ">=0.2.1"

[tool.poetry.group.dev.dependencies]
black = ">=23.0.0"
duckdb = ">=0.8.1"
duckdb-engine = ">=0.5"
ipython = ">=8.2.0"
ruff = ">=0.0.252"
setuptools = ">=67.0.0"

[tool.poetry.group.types.dependencies]
mypy = "^1.3"
mypy-protobuf = "^3.3.0"
types-protobuf = "^3.20.1"
types-pytz = ">=2022.0.0"
types-pyyaml = ">=6.0.12.8"
typing-extensions = ">=4"

[tool.poetry.group.test.dependencies]
pytest = "^7.0.0"
pytest-clarity = "^1.0.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.6.1"
pytest-randomly = "^3.10.1"
pytest-lazy-fixture = "^0.6.3"
pytz = "^2022.1"
sqlalchemy = ">=1.4.48"
pathspec = "0.11.2"
pyarrow = ">=11.0.0"
pytest-snapshot = "^0.9.0"

[tool.ruff]
line-length = 88
select = [
  "B", # flake8-bugbear
  "BLE", # flake8-blind-except
  "C4", # comprehensions
  "D", # pydocstyle
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "PGH", # pygrep-hooks
  "PLC", # pylint
  "PLE", # pylint
  "PLW", # pylint
  "RET", # flake8-return
  "RUF", # ruff-specific rules
  "SIM", # flake8-simplify
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
  "W", # pycodestyle
  "YTT", # flake8-2020

]
respect-gitignore = true
ignore = [
  "B904", # raise from e or raise from None in exception handlers
  "C408", # dict(...) as literal
  "D100", # public module
  "D101", # public class
  "D102", # public method
  "D103", # public function
  "D104", # public package
  "D105", # magic methods
  "D106", # nested class
  "D107", # init
  "D202", # blank lines after function docstring
  "D203", # blank line before class docstring
  "D213", # Multi-line docstring summary should start at the second line
  "D402", # First line should not be the function's signature
  "E501",
  "E731",
  "PGH003",
  "RET504",
  "RET505",
  "RET506",
  "RET507",
  "RET508",
  "SIM102", # nested ifs
  "SIM108", # convert everything to ternary operator
  "SIM114", # combine `if` branches
  "SIM117", # nested withs
  "SIM118", # remove .keys() calls from dictionaries
  "UP006", # use collections.deque instead of Deque for type annotation
]
target-version = "py39"

[tool.ruff.per-file-ignores]
"*test*.py" = ["D"] # ignore all docstring lints in tests

[tool.pytest.ini_options]
xfail_strict = true
addopts = [
  "--ignore=site-packages",
  "--ignore=dist-packages",
  "--ignore=.direnv",
  "--strict-markers",
  "--doctest-modules",
]
filterwarnings = [
  "error",
  # older importlib metadata that there's no real point in breaking with
  "ignore:SelectableGroups:DeprecationWarning",
  "ignore:`parse_type` is deprecated:FutureWarning",
  # ibis on postgres + windows
  "ignore:locale specific date formats:UserWarning",
  # ignore sqlalchemy 2.0 warnings (they're upstream in ibis)
  "ignore: Deprecated API features detected:sqlalchemy.exc.RemovedIn20Warning",
  # ignore struct pairs deprecation while we still support 4.0
  "ignore: `Struct.pairs` is deprecated:FutureWarning",
  # ignore output_dtype deprecation until version 7.0 is minimum supported
  "ignore:`Value.output_dtype` is deprecated:FutureWarning",

]
markers = ["no_decompile"]
norecursedirs = ["site-packages", "dist-packages", ".direnv"]

[tool.black]
line_length = 88

[tool.isort]
profile = "black"

[tool.mypy]
exclude = '((tests|docs)/.+|build)\.py'
ignore_missing_imports = true
# untyped things
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# Any handling
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = false
# None/Optional handling
no_implicit_optional = true
# show more context on failure
show_error_context = true
show_error_codes = true

[tool.pydocstyle]
inherit = false
convention = "numpy"
match_dir = "ibis_substrait"
add_ignore = ["D100", "D101", "D102", "D103", "D104", "D105"]

[build-system]
requires = ["poetry-core", "setuptools"]
build-backend = "poetry.core.masonry.api"
